================START config.py============================
# config.py
import os

class Config:
    SQLALCHEMY_DATABASE_URI = 'mysql+pymysql://root:24682468@localhost/task_manager'
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    SECRET_KEY = os.urandom(24)

================END config.py==============================

================START models.py============================

# models.py
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

class Task(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    description = db.Column(db.String(200), nullable=True)
    created_at = db.Column(db.DateTime, server_default=db.func.now())

================END models.py===============================


=================START base.html===========================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
</head>
<body>
    <div class="container mt-5">
        {% block content %}{% endblock %}
    </div>
</body>
</html>
=================END base.html==============================

=================START index.html===========================
{% extends 'base.html' %}

{% block content %}
<h1 class="text-center">Task Manager</h1>
<form action="{{ url_for('add_task') }}" method="post" class="mb-4">
    <div class="form-group">
        <input type="text" name="title" class="form-control" placeholder="Task Title" required>
    </div>
    <div class="form-group">
        <textarea name="description" class="form-control" placeholder="Task Description"></textarea>
    </div>
    <button type="submit" class="btn btn-primary btn-block">Add Task</button>
</form>
<ul class="list-group">
    {% for task in tasks %}
    <li class="list-group-item d-flex justify-content-between align-items-center">
        <div>
            <h5>{{ task.title }}</h5>
            <p>{{ task.description }}</p>
        </div>
        <a href="{{ url_for('delete_task', id=task.id) }}" class="btn btn-danger">Delete</a>
    </li>
    {% else %}
    <li class="list-group-item text-center">No tasks found</li>
    {% endfor %}
</ul>
{% endblock %}
======================END index.html==============================

======================START style.css=============================
body {
    background-color: #f8f9fa;
}
h1 {
    color: #343a40;
}
.btn-primary {
    background-color: #007bff;
    border-color: #007bff;
}
.btn-danger {
    background-color: #dc3545;
    border-color: #dc3545;
}

=======================END style.css==============================

=======================START app.py===============================
from flask import Flask, render_template, request, redirect, url_for
from config import Config
from models import db, Task

app = Flask(__name__)
app.config.from_object(Config)
db.init_app(app)

# create tables
with app.app_context():
    print("Creating tables...")
    db.create_all()
    print("Tables created.")

@app.route('/')
def index():
    tasks = Task.query.order_by(Task.created_at.desc()).all()
    return render_template('index.html', tasks=tasks)

@app.route('/add', methods=['POST'])
def add_task():
    title = request.form['title']
    description = request.form['description']
    new_task = Task(title=title, description=description)
    db.session.add(new_task)
    db.session.commit()
    return redirect(url_for('index'))

@app.route('/delete/<int:id>')
def delete_task(id):
    task = Task.query.get_or_404(id)
    db.session.delete(task)
    db.session.commit()
    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(debug=True)
=======================END app.py============================

